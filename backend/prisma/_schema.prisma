// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  createdAt DateTime @default(now())
  tasks Tasks[]
}

model Columns {
  id Int @id @default(autoincrement())
  name String
  tasks Tasks[]
}

model Colors {
  id Int @id @default(autoincrement())
  name String
  value String
  categories Categories[]
}

model Categories {
  id Int @id @default(autoincrement())
  name String
  color Int
  colorCategory Colors @relation(fields: [color], references: [id])
  categories TaskCategories[]
}

model Tasks {
  id Int   @id @default(autoincrement())
  name String @unique
  description String
  id_column Int
  user_column Int
  categories Int
  createdAt DateTime @default(now())
  endedAt DateTime
  user Users @relation(fields: [user_column], references: [id])
  column Columns @relation(fields: [id_column], references: [id])
  taskCategories TaskCategories[]
}

model TaskCategories {
  taskId Int
  categoryId Int

  task Tasks @relation(fields: [taskId], references: [id])
  category Categories @relation(fields: [categoryId], references: [id])

  @@id([taskId, categoryId])
}
