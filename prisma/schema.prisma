// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Columns {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tasks     Tasks[]
}

model Users {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  tasks     Tasks[]
  columns   Columns[]
}

model Tasks {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  createdAt   DateTime @default(now())

  user   Users @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  column   Columns @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId Int

  category   Categories? @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model Categories {
  id    Int     @id @default(autoincrement())
  name  String
  tasks Tasks[]

  color   Colors? @relation(fields: [colorId], references: [id])
  colorId Int
}

model Colors {
  id         Int          @id @default(autoincrement())
  name       String
  value      String
  categories Categories[]
}
